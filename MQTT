
#include <WiFiNINA.h>
#include <PubSubClient.h>

// -------- WiFi credentials --------
const char* ssid = "Redmi 12C";         
const char* password = "kanwalpreet"; 

// -------- MQTT broker details --------
const char* mqtt_server = "broker.emqx.io";  
const int mqtt_port = 1883;          

const MyName = "Prabhsimar Kaur"

WiFiClient wifiClient;         
PubSubClient client(wifiClient); // MQTT client using WiFi

// -------- Hardware pins --------
const int trigPin = 3;   // Ultrasonic sensor trigger pin
const int echoPin = 2;   // Ultrasonic sensor echo pin
const int ledPin = 10;    // LED pin

// -------- Measure distance function --------
// Sends a pulse from ultrasonic sensor and measures the reflected signal
long getDistance() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  long duration = pulseIn(echoPin, HIGH); // measure time pulse took
  return duration * 0.034 / 2;  // convert to distance in cm
}

// -------- LED blink helper function --------
// Makes it easy to blink LED with custom pattern
void blinkLED(int times, int delayMs) {
  for (int i = 0; i < times; i++) {
    digitalWrite(ledPin, HIGH);
    delay(delayMs);
    digitalWrite(ledPin, LOW);
    delay(delayMs);
  }
}

// -------- Callback function --------
// Called whenever a subscribed MQTT message arrives
void callback(char* topic, byte* payload, unsigned int length) {
  String msg = "";
  for (int i = 0; i < length; i++) {
    msg += (char)payload[i]; // convert payload to string
  }

  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("]: ");
  Serial.println(msg);

  // React differently depending on message
  if (msg == "wave") {
    blinkLED(3, 300);   // "wave" → blink LED 3 times quickly
  } else if (msg == "pat") {
    blinkLED(2, 800);   // "pat" → blink LED 2 times slowly
  }
}

// -------- Reconnect to broker --------
// Ensures device always stays connected to MQTT broker
void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Connect with client ID
    if (client.connect("Nano33IoTClient")) {
      Serial.println("connected");
      client.subscribe("SIT210/wave"); // Subscribe to topic
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      delay(2000); // wait before retry
    }
  }
}

// -------- Setup --------
void setup() {
  Serial.begin(115200);

  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(ledPin, OUTPUT);

  // Connect to WiFi
  Serial.print("Connecting to WiFi ");
  Serial.println(ssid);
  int status = WL_IDLE_STATUS;
  while (status != WL_CONNECTED) {
    status = WiFi.begin(ssid, password);
    delay(5000);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected!");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  // Setup MQTT
  client.setServer(mqtt_server, mqtt_port); // point to broker
  client.setCallback(callback);             // handle incoming messages
}


void loop() {
  // Maintain MQTT connection
  if (!client.connected()) {
    reconnect();
  }
  client.loop(); // keep listening for messages

  // Detect wave using ultrasonic sensor
  long distance = getDistance();
  if (distance < 20) { // if hand comes closer than 20cm
    client.publish("SIT210/wave", MyName); 
    delay(2000); // delay to avoid multiple triggers 
}
